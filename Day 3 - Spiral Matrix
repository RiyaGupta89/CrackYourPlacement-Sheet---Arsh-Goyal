class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        int rowStart=0;
        int rowEnd = m-1;
        int colStart = 0;
        int colEnd = n-1;
        int count = m*n;
        int counter = 0;
        List<Integer> ans = new ArrayList<>();
        
        while(rowStart<=rowEnd&&colStart<=colEnd){
            for(int i=colStart;i<=colEnd;i++){
                ans.add(matrix[rowStart][i]);
                counter++;
            }
            rowStart++;
            for(int i=rowStart;i<=rowEnd&&rowStart<=rowEnd&&colStart<=colEnd&&counter<count;i++){
                  ans.add(matrix[i][colEnd]);
                counter++;
            }
            colEnd--;
            for(int i=colEnd;i>=colStart&&rowStart<=rowEnd&&counter<count;i--){
                ans.add(matrix[rowEnd][i]);
                counter++;
            }
            rowEnd--;
            for(int i=rowEnd;i>=rowStart&&rowStart<=rowEnd&&counter<count;i--){
                ans.add(matrix[i][colStart]);
                counter++;
            }
            colStart++;
        }
        return ans;
        
    }
}
