class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        HashSet<List<Integer>> set = new HashSet<>();
        
        for(int i=0;i<nums.length-3;i++){
            for(int j=i+1;j<nums.length-2;j++){
              // two pointer
                int low = j+1;
                int high = nums.length-1;
                int sum = target-nums[i]-nums[j];
                while(low<high){
                if(nums[low]+nums[high]==sum){
                    set.add(Arrays.asList(nums[i],nums[j],nums[low],nums[high]));
                    while(low<high&&nums[low]==nums[low+1]) low++;
                    while(low<high&&nums[high]==nums[high-1]) high--;
                    low++;
                    high--;
                } else if(nums[low]+nums[high]<sum){
                    low++;
                } else {
                    high--;
                }
                }
            }
        }
        List<List<Integer>> answer = new ArrayList<>(set);
        return answer;
    }
}
